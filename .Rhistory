plot(x,y2,type="l")
plot(x,y1,type="l")
lines(x,y2)
x <- seq(1,29)
x <- seq(1,20)
y1 <- (x^2 + 2)/((x + 1) * (x + 2))
y2 <- 1/sqrt(3 * x)
plot(x,y1,type="l")
lines(x,y2)
help(plot)
plot.window(ylim=(0,1))
plot.window(ylim=(0:1))
plot.window(xlim=(0:20),ylim=(0:1))
(0:20)
(0,1)
c(0,2)
plot.window(xlim=c(0,20),ylim=c(0,1))
plot(x,y1,type="l")
plot(x,y1,type="l",ylim=c(0,1)))
plot(x,y1,type="l",ylim=c(0,1))
lines(x,y2)
plot(x,y1,type="l",ylim=c(0,1))
clouds <- read.table("/Users/marcuscarr/Downloads/clouds.dat")
clouds
clouds[2:]
clouds[-1]
clouds[-2]
clouds <- read.table("/Users/marcuscarr/Downloads/clouds.dat", header=TRUE))
clouds <- read.table("/Users/marcuscarr/Downloads/clouds.dat", header=TRUE)
clouds
clouds[0]
clouds[1]
clouds[2]
clouds <- read.table("/Users/marcuscarr/Downloads/clouds.dat", header=TRUE)
mean_unseed <- mean(clouds[1])
colmeans(clouds)
colMeans(clouds)
mean_clouds <- colMeans(clouds)
clouds <- read.table("/Users/marcuscarr/Downloads/clouds.dat", header=TRUE)
clouds_mat <- data.matrix(clouds)
clouds_mat
mean(clouds_mat[1])
clouds_mat[1]
clouds_mat[2]
clouds_mat[,2]
clouds_mat[,1]
mean_unseed <- mean(clouds_mat[,1])
mean_seed <- mean(clouds_mat[,2])
mean_unseed - mean_seed
sd(clouds_mat[,1])
sd(clouds_mat[,2])
help("qt")
num1 <- c(230,330,200)
num1
2 * 2 / num1
num2 <- c(340,430,210)
pmin(num1,num2)
sd_unseed <- sd(clouds_mat[,1])
sd_seed <- sd(clouds_mat[,2])
num <- length(clouds_mat[,1])
num
se <- sqrt((sd_unseed * sd_unseed + sd_seed * sd_seed)/num)
se
error <- qt(0.975,df = num - 1) * se
error
min <- mean_seed - mean_unseed - error
max <- mean_seed - mean_unseed + error
min
max
mean_unseed
mean_seed
sd_unseed
sd_seed
num
se
error
sample(clouds)
sample(clouds,2)
help("sample")
sample(clouds, size = 4)
sample(clouds_mat[,1],26)
resample1 <- lapply(1:100, function(i))
resample1 <- lapply(1:100, function(i)
sample(clouds_mat[,1], replace = TRUE))
resample1
resample2 <- lapply(1:100, function(i)
sample(clouds_mat[,2], replace = TRUE))
resample2[1]
resample1 <- lapply(1:100, function(i)
sample(clouds_mat[,1], replace = TRUE))
resample2 <- lapply(1:100, function(i)
sample(clouds_mat[,2], replace = TRUE))
mean(resample1)
colMeans(resample1)
means1 < sapply(resample1, mean)
means1 <- sapply(resample1, mean)
means2 <- sapply(resample2, mean)
diffs <- means2 - means1
diffs[1:10]
mean(diffs)
sd(diffs)
error_resample <- qnorm(0.975) * sd(diffs) / sqrt(100)
error_resample
error_resample <- qnorm(0.975) * sd(diffs) / sqrt(26)
error_resample
mean(diffs) - error_resample
mean(diffs) + error_resample
error <- qnorm(0.975) * se
min <- mean_seed - mean_unseed - error
max <- mean_seed - mean_unseed + error
error
min
max
quakes <- read.tabe("/Users/marcuscarr/Downloads/fijuquakes.dat", header = TRUE)
quakes <- read.table("/Users/marcuscarr/Downloads/fijuquakes.dat", header = TRUE)
quakes <- read.table("/Users/marcuscarr/Downloads/fijiquakes.dat", header = TRUE)
head(quakes)
hist(quakes$mag)
ecdf(quakes$mag)
plot.ecdf(quakes$mag)
hist(quakes$mag)
x10k = rnorm(n=10000)
y10k=exp(x10k)
hist(y10k, prob=T, breaks=50, ylim=c(0,.65), xlab='y', main='Histogram of y')
yseq = seq(from=min(y10k), to=max(y10k), length.out=100)
lines(x=yseq, y=1/yseq/sqrt(2*pi)*exp(-0.5*(log(yseq))^2))
dev.print(pdf, file='prob3.pdf',width=7.height=6)
dev.print(pdf, file='prob3.pdf',width=7,height=6)
pwd()
pwd
dir
path
path()
dir.path
dir.path()
dir(path)
dir
dir()
getwd()
n <- 10000
y <- rbinom(n,1,0.5)
y <- 2*y-1
x <- cumsum(y)
plot(y=x, x=1:n, type="l", xlab="n", ylab=expression(X[n]), main=expression(paste('Realizations of', X[i], ', i=1,2,...,10000')))
plot(y=x, x=1:n, type="l", xlab="n", ylab=expression(X[n]), main=expression(paste('Realizations of ', X[i], ', i=1,2,...,10000')))
var(x)
n<- 100000
y <- rbinom(n,1,0.5)
y <- 2*y-1
x <- cumsum(y)
plot(y=x, x=1:n, type="l", xlab="n", ylab=expression(X[n]), main=expression(paste('Realizations of ', X[i], ', i=1,2,...,10000')))
var(x)
n <- 1000000
y <- rbinom(n,1,0.5)
y <- 2*y-1
x <- cumsum(y)
plot(y=x, x=1:n, type="l", xlab="n", ylab=expression(X[n]), main=expression(paste('Realizations of ', X[i], ', i=1,2,...,10000')))
var(x)
var(y)
quit()
q()
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
power_data$Datetime
head(power_data)
head(paste(power_data$Date,power_data$Time))
strptime(head(paste(power_data$Date,power_data$Time)), format = "%d/%m/%Y %T")
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
Datetime <- strptime(paste(power_data$Date, power_data$Time),
format = "%d/%m/%Y %T")
power_data <- cbind(Datetime, power_data)
Datetime <- data.frame(strptime(paste(power_data$Date, power_data$Time),
format = "%d/%m/%Y %T"))
power_data <- cbind(Datetime, power_data)
Datetime <- data.frame(Datetime = strptime(paste(power_data$Date,
power_data$Time),
format = "%d/%m/%Y %T"))
power_data <- cbind(Datetime, power_data)
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
names(power_data)
names(power_data)[1:4]
power_data[names(power_data)[1:4]]
names(power_data)[4:10]
power_data[names(power_data)[4:10]] <- as.numeric(power_data[names(power_data)[4:10]])
for (i in names(power_data)[4:10]) head(power_data[[i]])
for (i in names(power_data)[4:10]) print(head(power_data[[i]]))
for (i in names(power_data)[4:10]) print(as.numeric(head(power_data[[i]]))
)
power_data["Voltage"]
for (i in names(power_data)[4:10]) power_data2[[i]] <- as.character(power_data[[i]])
power_data2 <- data.frame()
for (i in names(power_data)[4:10]) power_data2[[i]] <- as.character(power_data[[i]])
power_data2 <- data.frame(x = seq(1, 2889))
for (i in names(power_data)[4:10]) power_data2[[i]] <- as.character(power_data[[i]])
for i in names(power_data[4:10]) power_data[[i]] <- as.numeric(power_data[[i]])
for (i in names(power_data[4:10]) power_data[[i]]) <- as.numeric(power_data[[i]])
for (i in names(power_data[4:10]) power_data[[i]]) <- as.numeric(power_data[[i]])
for (i in names(power_data[4:10]) power_data[[i]] <- as.numeric(power_data[[i]])
for (i in names(power_data)[4:10]) power_data[[i]] <- as.numeric(power_data[[i]])
as.numeric("?")
as.Date(power_data$Datetime[1:10,])
as.Date(power_data$Datetime[1:10])
as.Date(power_data$Datetime[1:10]) %in% as.Date(c("2007-02-01", "2007-02-02"))
power_data_subset <- power_data[as.Date(power_data$Datetime[1:10])
%in% as.Date(c("2007-02-01", "2007-02-02")),]
power_data_subset
power_data_subset <- power_data[as.Date(power_data$Datetime)
%in% as.Date(c("2007-02-01", "2007-02-02")),]
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
as.factor(power_data$Date)
as.factor(power_data_subset$Date)
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
as.factor(power_data_subset$Date)
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
as.factor(power_data_subset$Date)
as.factor(power_data_subset$Global_active_power)
summary(power_data_subset$Global_active_power)
summary(power_data_subset)
hist(power_data_subset$Global_active_power)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)")
par("mar")
default_mar <- par("mar")
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.6)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
par$mgp
par("mpg")
par("mgp")
default_mgp <- par("mgp")
par("mgp" = c(2,1,0))
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
par("mgp" = c(2,0,0))
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
par("mgp" = c(2,1,0))
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
par("mgp" = c(2,1,-1))
par("mgp" = c(2,1,0))
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
png(filename = "plot1.png", width = 480, height = 480)
getwd()
png(filename = "plot1.png", width = 480, height = 480)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
dev.off()
?par
png(filename = "plot1.png", width = 480, height = 480)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red", bg = NA)
dev.off()
par("bg" = NA)
png(filename = "plot1.png", width = 480, height = 480)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red", bg = NA)
dev.off()
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
png(filename = "plot1.png", width = 480, height = 480, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
dev.off()
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
default_mar
par("mar" = c(4,4,2,2))
default_mar
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
png(filename = "plot1.png", width = 480, height = 480, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
dev.off()
png(filename = "plot1.png", width = 480, height = 480, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
dev.off()
png(filename = "plot1.png", width = 504, height = 504, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 0.6, cex.axis = 0.6, cex.main = 0.8, col = "red")
dev.off()
png(filename = "plot1.png", width = 504, height = 504, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 1, cex.axis = 1, cex.main = 1, col = "red")
dev.off()
png(filename = "plot1.png", width = 504, height = 504, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 1, cex.axis = 1, cex.main = 1.5, col = "red")
dev.off()
png(filename = "plot1.png", width = 504, height = 504, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global active power (kilowatts)", cex.lab = 1, cex.axis = 1, cex.main = 1.2, col = "red")
dev.off()
png(filename = "plot1.png", width = 504, height = 504, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", cex.lab = 1, cex.axis = 1, cex.main = 1.2, col = "red")
dev.off()
par("mar" = c(4,4,2,2), "mgp" = c(2,1,0))
png(filename = "plot1.png", width = 480, height = 480, bg = NA)
hist(power_data_subset$Global_active_power, main = "Global Active Power",
xlab = "Global active power (kilowatts)",
cex.lab = 1, cex.axis = 1, cex.main = 1.2, col = "red")
dev.off()
source('~/coursera/ExData_Plotting1/plot1.R', echo=TRUE)
?plot
with(power_data_subset, plot(Datetime, Global_active_power))
dev.off()
dev.off()
with(power_data_subset, plot(Datetime, Global_active_power))
?plot
with(power_data_subset, plot(Datetime, Global_active_power, type = "l"))
with(power_data_subset, plot(Datetime, Global_active_power, type = "l"), xlab = NULL, ylab = "Global Active Power (kilowatts)")
dev.off()
with(power_data_subset, plot(Datetime, Global_active_power, type = "l"), xlab = NULL, ylab = "Global Active Power (kilowatts)")
with(power_data_subset, plot(Datetime, Global_active_power, type = "l", xlab = NULL, ylab = "Global Active Power (kilowatts)")
with(power_data_subset, plot(Datetime, Global_active_power, type = "l", xlab = NULL, ylab = "Global Active Power (kilowatts)"))
png("plot2.png", height = 504, width = 504)
with(power_data_subset, plot(Datetime, Global_active_power, type = "l", xlab = NULL, ylab = "Global Active Power (kilowatts)"))
dev.off()
png("plot2.png", height = 504, width = 504)
with(power_data_subset, plot(Datetime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)"))
dev.off()
png("plot2.png", height = 504, width = 504, bg = NA)
with(power_data_subset, plot(Datetime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)"))
dev.off()
par$mar
par["mar"]
par("mar")
par("mgp")
dev.off()
with(power_data_subset, plot(Datetime, Sub_metering_1))
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l"))
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, line(Datetime, Sub_metering_2))
with(power_data_subset, lines(Datetime, Sub_metering_2))
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering", legend = TRUE))
legend("topright", legend = c("Sub_metering_1"), lty = 1)
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, col = c("black", "red", "blue"))
dev.off()
png("plot3.png", height = 504, width = 504, bg = NA)
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
dev.off()
par(mfrow = c(2,2))
with(power_data_subset, )
with(power_data_subset, {plot(Datetime, Global_active_power, xlab = "", ylab = "Global Active Power"), plot(Datetime, Voltage, xlab = "datetime"), plot(Datetime, Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering"), lines(Datetime, Sub_metering_2, col = "red"), lines(Datetime, Sub_metering_3, col = "blue"), legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = 1, col = c("black", "red", "blue")), plot(Datetime, Global_reactive_power, type = "l", xlab = "datetime")})
with(power_data_subset, plot(Datetime, Global_active_power))
with(power_data_subset, plot(Datetime, Global_active_power))
dev.off()
with(power_data_subset, plot(Datetime, Global_active_power))
dev.off()
par(mfrow = c(2,2))
plot(Datetime, Global_active_power, xlab = "", ylab = "Global Active Power")
plot(Datetime, Global_active_power, xlab = "", ylab = "Global Active Power")
dev.off
plot(Datetime, Global_active_power, xlab = "", ylab = "Global Active Power")
par(mfrow = c(2,2))
plot(Datetime, Global_active_power, xlab = "", ylab = "Global Active Power")
with(power_data_subset, plot(Datetime, Global_active_power, xlab = "", ylab = "Global Active Power"))
with(power_data_subset, plot(Datetime, Global_active_power, xlab = "", ylab = "Global Active Power", type = "l"))
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
par(mfrow = c(2,2))
# png("plot4.png", height = 504, width = 504, bg = NA)
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
par(mfrow = c(2,2))
# png("plot4.png", height = 504, width = 504, bg = NA)
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
# Set up environment for plot 4.
par(mfrow = c(2,2))
png("plot4.png", height = 504, width = 504, bg = NA)
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
# Set up environment for plot 4.
png("plot4.png", height = 504, width = 504, bg = NA)
par(mfrow = c(2,2))
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"))
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
# Set up environment for plot 4.
png("plot4.png", height = 504, width = 504, bg = NA)
par(mfrow = c(2,2))
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), bty = "o")
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
# Set up environment for plot 4.
png("plot4.png", height = 504, width = 504, bg = NA)
par(mfrow = c(2,2))
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), bty = "")
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
# Set up environment for plot 4.
png("plot4.png", height = 504, width = 504, bg = NA)
par(mfrow = c(2,2))
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), bty = "n")
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
# Set up environment for plot 4.
png("plot4.png", height = 480, width = 480, bg = NA)
par(mfrow = c(2,2))
# Add first plot.
with(power_data_subset, plot(Datetime, Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power"))
# Add second plot.
with(power_data_subset, plot(Datetime, Voltage, type = "l", xlab = "datetime"))
# Add third plot.
with(power_data_subset, plot(Datetime, Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering"))
with(power_data_subset, lines(Datetime, Sub_metering_2, col = "red"))
with(power_data_subset, lines(Datetime, Sub_metering_3, col = "blue"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"),
lty = 1, col = c("black", "red", "blue"), bty = "n")
# Add fourth plot.
with(power_data_subset, plot(Datetime, Global_reactive_power, type = "l"))
dev.off()
